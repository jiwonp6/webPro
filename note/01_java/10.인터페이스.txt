◎ 인터페이스(interface)
1. 인터페이스(implements)
	: 작업명세서와 비슷, 객체생성X, 추상메서드와 상수만 가능,
	  다향성을 가능케 함, 객체를 부속품화
	  다중구현O(cf. 다중상속X)
	* 문법
	public interface 인터페이스이름 {
		public [static] [final] 타입 상수이름 = 값;
		public [abstract] 메서드 이름(매개변수 목록);  
	}
	- 장점
	동시 개발작업 가능(인터페이스 구현 클래스/ 메서드 호출 클래스)
	표준화O
	관계 맺기O
	독립적인 프로그래밍O
	
2. 다향성
	: 객체가 다양하게 변할 수 O, 하나의 클래스나 함수가 다양하게 동작하는 것
 
3. 인터페이스의 다중상속
			단일	다중
	----------------------------------------
	class		단일	다중
	 ▲(extends)	상속	상속
	class		  O	  X
	----------------------------------------
	interface		단일	다중
	 ↑(implements)	구현	구현
	class		  O	  O
	----------------------------------------
	interface		단일	다중
	 ▲		상속	상속
	interface		  O	  O
	----------------------------------------
	interface class
	↑	▲	
	      class		
4. 인터페이스 - 추상클래스
	- 공통점
	 : 추상메소드O, 변수타입 정의가 목적, 익명클래스로 객체생성
	- 차이점
	 :       인터페이스		  추상메소드
	   구현(implements)	상속(extends)
	   상수, 메소드 존재만	변수, 메소드 기능사용 O
	   다중구현		단인상속
	
5. default 메소드
	: 기존 인터페이스에 디폴트 메소드 추가 → 인터페이스 확장 (이전의 구현 클래스에서도 사용 O)









