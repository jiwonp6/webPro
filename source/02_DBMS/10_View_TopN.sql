<<<<<<< HEAD
--[X] VIEW, INLINE VIEW, TOP-N구문
    --1. VIEW : 가상의 테이블 (1)단순뷰 (2)복합뷰
    --(1)단순뷰 : 하나의 테이블로 구성한 뷰
        -- EMPv0이라는 VIEW 생성 또는 수정 ---> EMP테이블 일부 필드를 갖는 가상의 테이블
SELECT * FROM USER_VIEWS;   --데이터 딕셔너리 뷰 확인
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP;    --DDL을 수행하면 데이터 딕셔너리 자동 수정
SELECT * FROM USER_VIEWS;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'ITMANAGER', 7369, SYSDATE, 40);   --VIEW에 INSERT
SELECT * FROM EMP;  --EMP 테이블에도 INSERT됨
UPDATE EMPv0 SET JOB = 'MANAGER' WHERE EMPNO =1111; --EMPv0를 UPDATE했지만 EMP테이블도 UPDATE됨
DELETE FROM EMPv0 WHERE EMPNO = '1111'; --EMPv0를 DELETE했지만 EMP테이블도 DELETE됨

        --EMPv0이라는 VIEW : EMP테이블의 30번 부서행만
CREATE OR REPLACE VIEW EMPv0    --EMPv0 수정함
    AS SELECT * 
        FROM EMP 
        WHERE DEPTNO = 30;
DESC EMPv0;
SELECT * FROM EMPv0;
SELECT * FROM EMP;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, SYSDATE,9000, 900, 30);    --30번 부서 INSERT
INSERT INTO EMPv0 VALUES (1112, '박', NULL, NULL, SYSDATE-1,9000, 900, 40);  --40번 부서 INSERT ---> 입력은 가능하지만 보이지는 않음
DELETE FROM EMPv0 WHERE EMPNO IN(1111,1112);    --30번 부서인 1111만 DELETE됨
DELETE FROM EMP WHERE EMPNO=1112; 

        --EMPv0 VIEW 생성 : ENAME, JOB, HIREDATE만으로 뷰
CREATE OR REPLACE VIEW EMPv0
    AS SELECT ENAME, JOB, HIREDATE
        FROM EMP;
INSERT INTO EMPv0 VALUES ('홍', 'SALESMAN', SYSDATE);    --PRIMARY KEY인 EMPNO가 NULL이 되어 INSERT 불가능       
SELECT *
    FROM EMPv0;
    
COMMIT;

    --VIEW의 제한 조건   (1)뷰의 조건 (2)읽기전용
    --WITH CHECK OPTION을 설정한 뷰는 뷰의 조건에 해당되는 데이터만 삽입, 수정, 삭제 가능
    --WITH READ ONLY을 설정한 뷰는 읽기 전용 뷰
        --EMPv0 : EMP 테이블에서 30번 부서만
CREATE OR REPLACE VIEW EMPv0
    AS SELECT * 
        FROM EMP 
        WHERE DEPTNO = 30
    WITH CHECK OPTION;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, SYSDATE, 9000, 900, 30);   --30번 부서만 INSERT
INSERT INTO EMPv0 VALUES (1112, '박', NULL, NULL, SYSDATE, 9000, 900, 40);   --WHERE 조건에 만족하지 않으면 불가
SELECT * FROM EMP;
DELETE FROM EMPv0 WHERE ENAME = 'SMITH';    --20번 부서 SMITH DELETE 안 됨
DELETE FROM EMPv0 WHERE EMPNO = 1111;   --30번 부서 DELETE
        --EMPv0 : 읽기전용 뷰
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, MGR, DEPTNO 
        FROM EMP
    WITH READ ONLY;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, 40);   --에러(읽기전용 뷰)
    --(2)복합뷰 : 2개 이상의 테이블로 구성한 뷰이거나 가상의 필드로 뷰를 만들 경우. DML문을 제한적으로 사용
    --① 2개 이상의 테이블로 뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DNAME, LOC
        FROM EMP E, DEPT D
        WHERE E.DEPTNO = D.DEPTNO;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', 'RESEARCH', 'DALLAS');  --복합뷰는 갱신 불가
    --② 가상의 필드로 뷰 : 컬럼에 별칭(영문자, 숫자, _)을 이용하여 뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, SAL*12 "YEAR_SAL"
        FROM EMP
        WHERE DEPTNO=10;
CREATE OR REPLACE VIEW EMPv0 (EMPNO, ENAME, YEAR_SAL)   --위랑 같음(또다른 별칭수여 방법)
    AS SELECT EMPNO, ENAME, SAL*12
        FROM EMP
        WHERE DEPTNO=10;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 2400); --복합뷰는 갱신 불가
--EX. 부서번호, 최소급여, 최대급여, 부서평균급여를 포함한 DEPTv1 뷰를 생성
CREATE OR REPLACE VIEW DEPTv1 (DEPTNO, MINSAL, MAXSAL, AVGSAL)
    AS SELECT DEPTNO, MIN(SAL), MAX(SAL), ROUND(AVG(SAL),2)
        FROM EMP
        GROUP BY DEPTNO;
SELECT * FROM DEPTv1;
--EX. 직책, 부서를 포함한 EMPv0 뷰를 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT DISTINCT JOB, DNAME 
        FROM DEPT D, EMP E
        WHERE D.DEPTNO = E.DEPTNO
        ORDER BY DNAME;
SELECT * FROM EMPv0;   
INSERT INTO EMPv0 VALUES ('CLERK', 10);    --DISTINCT를 포함한 뷰는 읽기 전용

--2. INLINE VIEW : FROM절 상의 서브쿼리를 INLINE VIEW라고 함, FROM절에 오는 서브쿼리는 VIEW처럼 적용
    --EX.급여가 2000을 초과하는 사원의 평균급여
SELECT AVG(SAL)
    FROM EMP
    WHERE SAL>2000;
SELECT AVG(SAL)
    FROM (SELECT SAL FROM EMP WHERE SAL>2000);
    
    --EX. 부서 평균 월급보다 높은 사원을 사번, 이름, 급여(서브쿼리 연습문제 24, 25)
SELECT EMPNO, ENAME, SAL
    FROM EMP E
    WHERE SAL >(SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
SELECT EMPNO, ENAME, SAL, AVGSAL
    FROM EMP E, (SELECT DEPTNO, ROUND(AVG(SAL),2) "AVGSAL" FROM EMP GROUP BY DEPTNO) "A"
    WHERE E.DEPTNO = A.DEPTNO AND SAL>AVGSAL;   --INLINE VIEW
--3. TOP-N 구문(TOP 1~10등/ TOP 11~20등/ TOP 6~10등) --등수 중복X
--★ ROWNUM : FROM절의 테이블로부터 가져온 순서(개수가 정해져있음)
SELECT ROWNUM, ENAME
    FROM EMP 
    WHERE DEPTNO=20;   
SELECT ROWNUM, ENAME
    FROM EMP 
    WHERE DEPTNO=20
    ORDER BY ENAME;   --ORDER BY 하면 순서 뒤죽박죽 섞임(ROWNUM 선정이 먼저 실행되기 때문)
--등수, 이름, SAL (전체행에 대해)
SELECT ROWNUM, ENAME, SAL 
    FROM EMP
    ORDER BY SAL DESC;  --ROWNUM이 등수가 아님 (테이블로부터 가져온 순서)
SELECT ROWNUM "RANK", ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL DESC); --미리 INLINE VIEW로 순서를 정해서 가져옴(ROWNUM이 등수)
--함수를 이용한 RANK출력(비추...)   -- TOP-N구문X
SELECT RANK() OVER(ORDER BY SAL DESC) RANK, 
    DENSE_RANK() OVER(ORDER BY SAL DESC) DENSE_RANK,  
    ROW_NUMBER() OVER(ORDER BY SAL DESC) ROW_NUMBER,   
    ENAME, SAL FROM EMP;

--SAL기준으로 1~5등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM BETWEEN 1 AND 5;
--SAL기준으로 6~10등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM BETWEEN 6 AND 10;  --결과출력X
--★ TOP-N 구문 [1단계]
SELECT ROWNUM RN, ENAME, SAL 
    FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC);
--★ TOP-N 구문 [2단계-완성]
SELECT ROWNUM, RN, ENAME, SAL 
    FROM (SELECT ROWNUM RN, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC))
    WHERE RN BETWEEN 6 AND 10;
--이름을 알파벳 순서대로 정렬해서 6~10번째까지 출력(등수, 이름, 사번, JOB, MGR, HIREDATE)
SELECT RN, ENAME, EMPNO, JOB, MGR, HIREDATE
    FROM (SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE FROM(SELECT * FROM EMP ORDER BY ENAME))
    WHERE RN BETWEEN 6 AND 10;

--★ 총 연습문제
-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
    AS SELECT DNAME, ENAME
        FROM DEPT D, EMP E
        WHERE D.DEPTNO = E.DEPTNO;
SELECT * FROM DNAME_ENAME_VU;

-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오 
CREATE OR REPLACE VIEW WORKER_MANAGER_VU
    AS SELECT W.ENAME "WORKER", M.ENAME "MANAGER"
        FROM EMP W, EMP M
        WHERE W.MGR=M.EMPNO(+);
SELECT * FROM WORKER_MANAGER_VU;

-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수). -- 학생 질문 
SELECT  DEPTNO, SUMSAL, ROWNUM RN
    FROM (SELECT  DEPTNO, SUM(SAL) "SUMSAL" FROM EMP GROUP BY DEPTNO ORDER BY SUMSAL DESC);

-- 3-1. 부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT *
    FROM(SELECT  DEPTNO, SUMSAL, ROWNUM RN FROM (SELECT  DEPTNO, SUM(SAL) "SUMSAL" FROM EMP GROUP BY DEPTNO ORDER BY SUMSAL DESC))
    WHERE RN BETWEEN 2 AND 3;

-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE
    FROM EMP
    ORDER BY HIREDATE DESC;

-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT RN, EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, EMPNO, ENAME, HIREDATE FROM(SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 1 AND 5;

-- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT RN, EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, EMPNO, ENAME, HIREDATE FROM(SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 6 AND 10;
    
SELECT RN, EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, A.* FROM(SELECT * FROM EMP ORDER BY HIREDATE DESC) "A")
    WHERE RN BETWEEN 6 AND 10;
=======
--[X] VIEW, INLINE VIEW, TOP-N구문
    --1. VIEW : 가상의 테이블 (1)단순뷰 (2)복합뷰
    --(1)단순뷰 : 하나의 테이블로 구성한 뷰
        -- EMPv0이라는 VIEW 생성 또는 수정 ---> EMP테이블 일부 필드를 갖는 가상의 테이블
SELECT * FROM USER_VIEWS;   --데이터 딕셔너리 뷰 확인
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP;    --DDL을 수행하면 데이터 딕셔너리 자동 수정
SELECT * FROM USER_VIEWS;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'ITMANAGER', 7369, SYSDATE, 40);   --VIEW에 INSERT
SELECT * FROM EMP;  --EMP 테이블에도 INSERT됨
UPDATE EMPv0 SET JOB = 'MANAGER' WHERE EMPNO =1111; --EMPv0를 UPDATE했지만 EMP테이블도 UPDATE됨
DELETE FROM EMPv0 WHERE EMPNO = '1111'; --EMPv0를 DELETE했지만 EMP테이블도 DELETE됨

        --EMPv0이라는 VIEW : EMP테이블의 30번 부서행만
CREATE OR REPLACE VIEW EMPv0    --EMPv0 수정함
    AS SELECT * 
        FROM EMP 
        WHERE DEPTNO = 30;
DESC EMPv0;
SELECT * FROM EMPv0;
SELECT * FROM EMP;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, SYSDATE,9000, 900, 30);    --30번 부서 INSERT
INSERT INTO EMPv0 VALUES (1112, '박', NULL, NULL, SYSDATE-1,9000, 900, 40);  --40번 부서 INSERT ---> 입력은 가능하지만 보이지는 않음
DELETE FROM EMPv0 WHERE EMPNO IN(1111,1112);    --30번 부서인 1111만 DELETE됨
DELETE FROM EMP WHERE EMPNO=1112; 

        --EMPv0 VIEW 생성 : ENAME, JOB, HIREDATE만으로 뷰
CREATE OR REPLACE VIEW EMPv0
    AS SELECT ENAME, JOB, HIREDATE
        FROM EMP;
INSERT INTO EMPv0 VALUES ('홍', 'SALESMAN', SYSDATE);    --PRIMARY KEY인 EMPNO가 NULL이 되어 INSERT 불가능       
SELECT *
    FROM EMPv0;
    
COMMIT;

    --VIEW의 제한 조건   (1)뷰의 조건 (2)읽기전용
    --WITH CHECK OPTION을 설정한 뷰는 뷰의 조건에 해당되는 데이터만 삽입, 수정, 삭제 가능
    --WITH READ ONLY을 설정한 뷰는 읽기 전용 뷰
        --EMPv0 : EMP 테이블에서 30번 부서만
CREATE OR REPLACE VIEW EMPv0
    AS SELECT * 
        FROM EMP 
        WHERE DEPTNO = 30
    WITH CHECK OPTION;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, SYSDATE, 9000, 900, 30);   --30번 부서만 INSERT
INSERT INTO EMPv0 VALUES (1112, '박', NULL, NULL, SYSDATE, 9000, 900, 40);   --WHERE 조건에 만족하지 않으면 불가
SELECT * FROM EMP;
DELETE FROM EMPv0 WHERE ENAME = 'SMITH';    --20번 부서 SMITH DELETE 안 됨
DELETE FROM EMPv0 WHERE EMPNO = 1111;   --30번 부서 DELETE
        --EMPv0 : 읽기전용 뷰
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, MGR, DEPTNO 
        FROM EMP
    WITH READ ONLY;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, 40);   --에러(읽기전용 뷰)
    --(2)복합뷰 : 2개 이상의 테이블로 구성한 뷰이거나 가상의 필드로 뷰를 만들 경우. DML문을 제한적으로 사용
    --① 2개 이상의 테이블로 뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DNAME, LOC
        FROM EMP E, DEPT D
        WHERE E.DEPTNO = D.DEPTNO;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', 'RESEARCH', 'DALLAS');  --복합뷰는 갱신 불가
    --② 가상의 필드로 뷰 : 컬럼에 별칭(영문자, 숫자, _)을 이용하여 뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, SAL*12 "YEAR_SAL"
        FROM EMP
        WHERE DEPTNO=10;
CREATE OR REPLACE VIEW EMPv0 (EMPNO, ENAME, YEAR_SAL)   --위랑 같음(또다른 별칭수여 방법)
    AS SELECT EMPNO, ENAME, SAL*12
        FROM EMP
        WHERE DEPTNO=10;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 2400); --복합뷰는 갱신 불가
--EX. 부서번호, 최소급여, 최대급여, 부서평균급여를 포함한 DEPTv1 뷰를 생성
CREATE OR REPLACE VIEW DEPTv1 (DEPTNO, MINSAL, MAXSAL, AVGSAL)
    AS SELECT DEPTNO, MIN(SAL), MAX(SAL), ROUND(AVG(SAL),2)
        FROM EMP
        GROUP BY DEPTNO;
SELECT * FROM DEPTv1;
--EX. 직책, 부서를 포함한 EMPv0 뷰를 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT DISTINCT JOB, DNAME 
        FROM DEPT D, EMP E
        WHERE D.DEPTNO = E.DEPTNO
        ORDER BY DNAME;
SELECT * FROM EMPv0;   
INSERT INTO EMPv0 VALUES ('CLERK', 10);    --DISTINCT를 포함한 뷰는 읽기 전용

--2. INLINE VIEW : FROM절 상의 서브쿼리를 INLINE VIEW라고 함, FROM절에 오는 서브쿼리는 VIEW처럼 적용
    --EX.급여가 2000을 초과하는 사원의 평균급여
SELECT AVG(SAL)
    FROM EMP
    WHERE SAL>2000;
SELECT AVG(SAL)
    FROM (SELECT SAL FROM EMP WHERE SAL>2000);
    
    --EX. 부서 평균 월급보다 높은 사원을 사번, 이름, 급여(서브쿼리 연습문제 24, 25)
SELECT EMPNO, ENAME, SAL
    FROM EMP E
    WHERE SAL >(SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
SELECT EMPNO, ENAME, SAL, AVGSAL
    FROM EMP E, (SELECT DEPTNO, ROUND(AVG(SAL),2) "AVGSAL" FROM EMP GROUP BY DEPTNO) "A"
    WHERE E.DEPTNO = A.DEPTNO AND SAL>AVGSAL;   --INLINE VIEW
--3. TOP-N 구문(TOP 1~10등/ TOP 11~20등/ TOP 6~10등) --등수 중복X
--★ ROWNUM : FROM절의 테이블로부터 가져온 순서(개수가 정해져있음)
SELECT ROWNUM, ENAME
    FROM EMP 
    WHERE DEPTNO=20;   
SELECT ROWNUM, ENAME
    FROM EMP 
    WHERE DEPTNO=20
    ORDER BY ENAME;   --ORDER BY 하면 순서 뒤죽박죽 섞임(ROWNUM 선정이 먼저 실행되기 때문)
--등수, 이름, SAL (전체행에 대해)
SELECT ROWNUM, ENAME, SAL 
    FROM EMP
    ORDER BY SAL DESC;  --ROWNUM이 등수가 아님 (테이블로부터 가져온 순서)
SELECT ROWNUM "RANK", ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL DESC); --미리 INLINE VIEW로 순서를 정해서 가져옴(ROWNUM이 등수)
--함수를 이용한 RANK출력(비추...)   -- TOP-N구문X
SELECT RANK() OVER(ORDER BY SAL DESC) RANK, 
    DENSE_RANK() OVER(ORDER BY SAL DESC) DENSE_RANK,  
    ROW_NUMBER() OVER(ORDER BY SAL DESC) ROW_NUMBER,   
    ENAME, SAL FROM EMP;

--SAL기준으로 1~5등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM BETWEEN 1 AND 5;
--SAL기준으로 6~10등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM BETWEEN 6 AND 10;  --결과출력X
--★ TOP-N 구문 [1단계]
SELECT ROWNUM RN, ENAME, SAL 
    FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC);
--★ TOP-N 구문 [2단계-완성]
SELECT ROWNUM, RN, ENAME, SAL 
    FROM (SELECT ROWNUM RN, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC))
    WHERE RN BETWEEN 6 AND 10;
--이름을 알파벳 순서대로 정렬해서 6~10번째까지 출력(등수, 이름, 사번, JOB, MGR, HIREDATE)
SELECT RN, ENAME, EMPNO, JOB, MGR, HIREDATE
    FROM (SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE FROM(SELECT * FROM EMP ORDER BY ENAME))
    WHERE RN BETWEEN 6 AND 10;

--★ 총 연습문제
-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
    AS SELECT DNAME, ENAME
        FROM DEPT D, EMP E
        WHERE D.DEPTNO = E.DEPTNO;
SELECT * FROM DNAME_ENAME_VU;

-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오 
CREATE OR REPLACE VIEW WORKER_MANAGER_VU
    AS SELECT W.ENAME "WORKER", M.ENAME "MANAGER"
        FROM EMP W, EMP M
        WHERE W.MGR=M.EMPNO(+);
SELECT * FROM WORKER_MANAGER_VU;

-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수). -- 학생 질문 
SELECT  DEPTNO, SUMSAL, ROWNUM RN
    FROM (SELECT  DEPTNO, SUM(SAL) "SUMSAL" FROM EMP GROUP BY DEPTNO ORDER BY SUMSAL DESC);

-- 3-1. 부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT *
    FROM(SELECT  DEPTNO, SUMSAL, ROWNUM RN FROM (SELECT  DEPTNO, SUM(SAL) "SUMSAL" FROM EMP GROUP BY DEPTNO ORDER BY SUMSAL DESC))
    WHERE RN BETWEEN 2 AND 3;

-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE
    FROM EMP
    ORDER BY HIREDATE DESC;

-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT RN, EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, EMPNO, ENAME, HIREDATE FROM(SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 1 AND 5;

-- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT RN, EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, EMPNO, ENAME, HIREDATE FROM(SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 6 AND 10;
    
SELECT RN, EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, A.* FROM(SELECT * FROM EMP ORDER BY HIREDATE DESC) "A")
    WHERE RN BETWEEN 6 AND 10;
>>>>>>> 96d58a64e5ebb5b1e4ae407f3b35890afe1e7606
